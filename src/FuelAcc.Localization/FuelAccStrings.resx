<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Backup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="Button_Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Button_Launch_Browser" xml:space="preserve">
    <value>Launch Browser</value>
  </data>
  <data name="Button_Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="Column_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Column_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Column_Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Column_Parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="Column_Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Column_Succeeded" xml:space="preserve">
    <value>Succeeded</value>
  </data>
  <data name="Column_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Column_Url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="Confirm_Backup_Profile" xml:space="preserve">
    <value>Are you sure to backup selected profile?</value>
  </data>
  <data name="Confirm_Clear_Profile" xml:space="preserve">
    <value>Are you sure to CLEAR selected profile?</value>
  </data>
  <data name="Confirm_Restore_Profile" xml:space="preserve">
    <value>Are you sure to restore over selected profile? All existed data will be lost!</value>
  </data>
  <data name="Field_Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Field_PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Field_Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Page_Events_Intro" xml:space="preserve">
    <value>Last 10 reported events with realtime update.</value>
  </data>
  <data name="Page_Events_Nav" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Page_Events_Title" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Page_Home_Nav" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Page_ReportRaw_Intro" xml:space="preserve">
    <value>Here you can report many URLs by just paste a text (as an example from a Telegram post) and the server will recognize all supported URL types in the text automatically.</value>
  </data>
  <data name="Page_ReportRaw_Nav" xml:space="preserve">
    <value>Report text</value>
  </data>
  <data name="Page_ReportRaw_Title" xml:space="preserve">
    <value>Report Text</value>
  </data>
  <data name="Page_Report_Intro" xml:space="preserve">
    <value>Here you can report single URL by manually fill the form</value>
  </data>
  <data name="Page_Report_Nav" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Page_Report_Title" xml:space="preserve">
    <value>Report URL</value>
  </data>
  <data name="Settings_Email_Title" xml:space="preserve">
    <value>Email settings</value>
  </data>
  <data name="Settings_Regex_Title" xml:space="preserve">
    <value>Regex settings</value>
  </data>
  <data name="Settings_Replacements_Title" xml:space="preserve">
    <value>Replacements settings</value>
  </data>
  <data name="Settings_Scripts_Browser" xml:space="preserve">
    <value>Browser scripts</value>
  </data>
  <data name="Settings_Scripts_Generic" xml:space="preserve">
    <value>Generic scripts</value>
  </data>
  <data name="Settings_Scripts_Telegram" xml:space="preserve">
    <value>Telegram scripts</value>
  </data>
  <data name="Settings_Browser_Form_Profiles_Intro" xml:space="preserve">
    <value>You have to launch a browser once for log in into your social network accounts. 
Supported YouTube, Facebook, Twitter, Instagram, TikTok. After you logged in to account of social network exit from the browser</value>
  </data>
  <data name="Settings_Browser_Form_Profiles_Name" xml:space="preserve">
    <value>Manage profiles</value>
  </data>
  <data name="Settings_Browser_Title" xml:space="preserve">
    <value>Browser settings</value>
  </data>
  <data name="Settings_Telega_Form_Code_Hint" xml:space="preserve">
    <value>You have 15 min to sign in with sent code</value>
  </data>
  <data name="Settings_Telega_Form_Code_Name" xml:space="preserve">
    <value>Send code to phone</value>
  </data>
  <data name="Settings_Telega_Form_Sign_Name" xml:space="preserve">
    <value>Sign in with phone and code</value>
  </data>
  <data name="Settings_Telega_Title" xml:space="preserve">
    <value>Telegram settings</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Table_Posted" xml:space="preserve">
    <value>Posted report messages</value>
  </data>
  <data name="Button_Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Button_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Field_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Edit_Script_Browser" xml:space="preserve">
    <value>Edit browser script</value>
  </data>
  <data name="Edit_Script_Generic" xml:space="preserve">
    <value>Edit generic script</value>
  </data>
  <data name="Edit_Script_Telegram" xml:space="preserve">
    <value>Edit Telegram script</value>
  </data>
  <data name="Button_Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Confirm_Backup" xml:space="preserve">
    <value>Are you sure you want backup?</value>
  </data>
  <data name="Confirm_Save" xml:space="preserve">
    <value>Are you sure you want save?</value>
  </data>
  <data name="Confirm_Delete" xml:space="preserve">
    <value>Are you ure you want to delete?</value>
  </data>
  <data name="Button_ProcessStopRussiaChannel" xml:space="preserve">
    <value>Process StopRussiaChannel targets</value>
  </data>
</root>