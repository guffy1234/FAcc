@using FuelAcc.ApiClient
@inject FuelAcc.Client.Shared.PageHistoryState PageHistoryState

<EditForm Model="@record" OnValidSubmit="@OnValidSubmit">
    @* <FluentValidator TValidator="PersonValidator" /> *@
    @if (IsCreate)
    {
        <div>
            Attention! Branch is specific entity used for replication.
            When you create a new branch you must take ID of the Main branch of an another installation and enter it here.
            Basically it's better to delegate to Admin this operation.
        </div>
    }
    <div class="form-group">
        <label>Id :</label>
        <div>
            @if (!IsCreate)
            {
                @record.Id.ToString();
            }
            else
            {
                <InputText @bind-Value="@IdStr" class="form-control col-sm-3" />
                <ValidationMessage For="@(() => record.Name)" />
            }
        </div>
    </div>
    <div class="form-group">
        <label>Name :</label>
        <div>
            <InputText @bind-Value="@record.Name" class="form-control col-sm-3" />
            <ValidationMessage For="@(() => record.Name)" />
        </div>
    </div>

    <hr/>

    <div class="form-group">
        <button disabled="@loading" class="btn btn-primary">
            @if (loading) 
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            @ButtonText
        </button>
        @if (PageHistoryState.CanGoBack()){
            <NavLink href="@PageHistoryState.GetGoBackPage()" class="btn btn-link">Cancel</NavLink>
        }
        else{
            <NavLink href="/dictionary/branch/1" class="btn btn-link">Back</NavLink>
        }
    </div>

</EditForm>

@code {
    private string IdStr { 
        get => record.Id.ToString(); 
        set {
            if (IsCreate && Guid.TryParse(value, out var g))
            {
                record.Id = g;
            }
        } 
    }
    [Parameter]
    public BranchDto record { get; set; }
    [Parameter]
    public bool IsCreate { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Save";
    [Parameter]
    public bool loading {get; set;} = false;
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
}