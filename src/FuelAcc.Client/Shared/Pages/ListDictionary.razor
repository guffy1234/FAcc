@typeparam TItem

@inherits ComponentBase

@using FuelAcc.Application.DtoCommon
@using FuelAcc.Application.DtoCommon.Paging
@using FuelAcc.Client.Services.Crud
@using FuelAcc.ApiClient

@inject IDictionaryService<TItem> DtoService
@inject IAuthenticationContext LoginService
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject FuelAcc.Client.Shared.PageHistoryState PageHistoryState


@code {

    [Parameter]
    public int Page { get; set;} = 1;
    [Parameter]
    public string SearchTerm { get; set; } = string.Empty;

    protected string NavigationPrefix;
    protected PagedResult<TItem> Records;
    
    protected override void OnInitialized()
    {
        PageHistoryState.AddPageToHistory(UriHelper.Uri);
        base.OnInitialized();
    }
    
    protected override async Task OnParametersSetAsync()
    {
        Records = await DtoService.GetPaged(null, Page);
        PageHistoryState.AddPageToHistory(UriHelper.Uri);
    }

    protected async Task SearchBoxKeyPress(KeyboardEventArgs ev)
    {
        if (ev.Key == "Enter")
        {
            await SearchClick();
        }
    }

    protected async Task SearchClick()
    {
        if (string.IsNullOrEmpty(SearchTerm))
        {
            Records = await DtoService.GetPaged(null, Page);
            return;
        }
        Records = await DtoService.GetPaged(SearchTerm, Page);
        StateHasChanged();
    }

    protected async Task ClearSearch()
    {
        SearchTerm = string.Empty;
        Records = await DtoService.GetPaged(SearchTerm, Page);
        PageHistoryState.AddPageToHistory(UriHelper.Uri);
        StateHasChanged();
    }

    protected void PagerPageChanged(int page)
    {
        UriHelper.NavigateTo($"{NavigationPrefix}/{page}");
        PageHistoryState.AddPageToHistory(UriHelper.Uri);
    }

    protected async void DeleteRecord(Guid id)
    {
        await DtoService.Delete(id);
        Records = await DtoService.GetPaged(SearchTerm, Page);
        StateHasChanged();
    }
}